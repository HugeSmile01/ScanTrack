# Workflow for deploying static content to GitHub Pages and setting up Firebase
name: Deploy static content to Pages

on:
  # Trigger the workflow on push to the main branch or manually from the Actions tab
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Set up Firebase environment variables
        run: |
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> $GITHUB_ENV

      # Add additional steps here to deploy or interact with Firebase, if needed
      # For example, deploying to Firebase Hosting or running Firebase CLI commands

      - name: Example Firebase Deployment
        run: |
          # Ensure you have Firebase CLI installed
          npm install -g firebase-tools
          # Login to Firebase using the token stored in the secret
          firebase login:ci --token ${{ secrets.FIREBASE_AUTH_TOKEN }}
          # Deploy to Firebase Hosting
          firebase deploy --only hosting
